{"version":3,"sources":["data.js","images/aerodactyl.jpg","images/alakazam.jpg","images/charmander.jpg","images/diglett.jpg","images/gengar.jpg","images/gyarados.jpg","images/mewtwo.jpg","images/pikachu.jpg","images/snorlax.jpg","images/squirtle.jpg","context.js","components/Header.js","components/Card.js","components/Cardlist.js","App.js","index.js"],"names":["data","id","name","img","AppContext","React","createContext","AppProvider","children","useState","highscore","setHighScore","currentScore","setCurrentScore","cards","ids","setIds","useEffect","shuffleOrder","randomise","a","b","Math","random","arrRandom","sort","console","log","Provider","value","cardClickHandler","includes","push","Header","useContext","className","Card","item","onClick","src","alt","Cardlist","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA0BeA,EAfF,CACT,CAAEC,GAAI,EAAGC,KAAM,aAAcC,ICZlB,IAA0B,wCDarC,CAAEF,GAAI,EAAGC,KAAM,WAAYC,IEbhB,IAA0B,sCFcrC,CAAEF,GAAI,EAAGC,KAAM,aAAcC,IGdlB,IAA0B,wCHerC,CAAEF,GAAI,EAAGC,KAAM,UAAWC,IIff,IAA0B,qCJgBrC,CAAEF,GAAI,EAAGC,KAAM,SAAUC,IKhBd,IAA0B,oCLiBrC,CAAEF,GAAI,EAAGC,KAAM,WAAYC,IMjBhB,IAA0B,sCNkBrC,CAAEF,GAAI,EAAGC,KAAM,SAAUC,IOlBd,IAA0B,oCPmBrC,CAAEF,GAAI,EAAGC,KAAM,UAAWC,IQnBf,IAA0B,qCRoBrC,CAAEF,GAAI,EAAGC,KAAM,UAAWC,ISpBf,IAA0B,qCTqBrC,CAAEF,GAAI,EAAGC,KAAM,WAAYC,IUrBhB,IAA0B,uC,OCGnCC,EAAaC,IAAMC,gBAGnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAAS,CAACT,SAApC,mBAAOc,EAAP,KACA,GADA,KACsBL,mBAAS,KAA/B,mBAAOM,EAAP,KAAYC,EAAZ,KAqCAC,qBAAU,WACRC,MACC,CAACN,IAEJ,IAAMO,EAAY,SAACC,EAAGC,GACpB,OAAOC,KAAKC,SAAW,IAGnBC,EAAYxB,EAEZkB,EAAe,WACnBlB,EAAKyB,KAAKN,GACVO,QAAQC,IAAIH,IAId,OACE,cAACpB,EAAWwB,SAAZ,CAAqBC,MAAO,CAAEnB,YAAWE,eAAcE,QAAOgB,iBAnDvC,SAAC7B,GACxByB,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIZ,GAERA,EAAIgB,SAAS9B,IAEfY,EAAgB,GAChBG,EAAO,MAIPH,EAAgBD,EAAe,GAC3BA,GAAgBF,GAClBC,EAAaD,EAAY,GAE3BK,EAAIiB,KAAK/B,MAoCX,SACGO,KC/CQyB,EAfA,WACb,IAAMjC,EAAOkC,qBAAW9B,GACxB,OACE,sBAAK+B,UAAU,SAAf,UACE,qDACA,8EAEA,sBAAKA,UAAU,WAAf,UACA,4CAAenC,EAAKU,aACpB,gDAAmBV,EAAKY,uB,OCOfwB,EAfF,SAAC,GAAe,IAAXC,EAAU,oBAClBrC,EAAOkC,qBAAW9B,GAGxB,OACI,sBAAK+B,UAAU,aAA2BG,QAAS,kBAAMtC,EAAK8B,iBAAiBO,EAAKpC,KAApF,UACI,6BAAKoC,EAAKnC,OAEV,qBAAKqC,IAAKF,EAAKlC,IAAKqC,IAAKH,EAAKnC,SAHDmC,EAAKpC,KCU/BwC,EAfE,WACb,IAAMzC,EAAOkC,qBAAW9B,GAExB,OACI,qBAAK+B,UAAU,cAAf,SACKnC,EAAKc,MAAMd,KAAK0C,KAAI,SAACL,GAGlB,OAAO,cAAC,EAAD,eAAwBA,GAAbA,EAAKpC,UCCxB0C,MATf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.add05ec6.chunk.js","sourcesContent":["import aerodactyl from './images/aerodactyl.jpg'\nimport alakazam from './images/alakazam.jpg'\nimport charmander from './images/charmander.jpg'\nimport diglett from './images/diglett.jpg'\nimport gengar from './images/gengar.jpg'\nimport gyarados from './images/gyarados.jpg'\nimport mewtwo from './images/mewtwo.jpg'\nimport pikachu from './images/pikachu.jpg'\nimport snorlax from './images/snorlax.jpg'\nimport squirtle from './images/squirtle.jpg'\n\nconst data = [\n    { id: 0, name: \"Aerodactyl\", img: aerodactyl},\n    { id: 1, name: \"Alakazam\", img: alakazam},\n    { id: 2, name: \"Charmander\", img: charmander},\n    { id: 3, name: \"Diglett\", img: diglett},\n    { id: 4, name: \"Gengar\", img: gengar},\n    { id: 5, name: \"Gyarados\", img: gyarados},\n    { id: 6, name: \"Mewtwo\", img: mewtwo},\n    { id: 7, name: \"Pikachu\", img: pikachu},\n    { id: 8, name: \"Snorlax\", img: snorlax},\n    { id: 9, name: \"Squirtle\", img: squirtle},\n\n\n  ];\n\nexport default data;\n\n// /home/henry/Programming/Zero_To_Mastery/FreeCodeCamp/Odin/ReactJS/MemoryCard/memorycard/src/images/aerodactyl.jpg","export default __webpack_public_path__ + \"static/media/aerodactyl.0d5ca3f0.jpg\";","export default __webpack_public_path__ + \"static/media/alakazam.817b30da.jpg\";","export default __webpack_public_path__ + \"static/media/charmander.06a41048.jpg\";","export default __webpack_public_path__ + \"static/media/diglett.f961142f.jpg\";","export default __webpack_public_path__ + \"static/media/gengar.acbb485a.jpg\";","export default __webpack_public_path__ + \"static/media/gyarados.71bf9f50.jpg\";","export default __webpack_public_path__ + \"static/media/mewtwo.542aa56c.jpg\";","export default __webpack_public_path__ + \"static/media/pikachu.af952e21.jpg\";","export default __webpack_public_path__ + \"static/media/snorlax.dba14ad0.jpg\";","export default __webpack_public_path__ + \"static/media/squirtle.14ad7b5f.jpg\";","import React, { useState, useEffect } from \"react\";\nimport data from './data';\n\nconst AppContext = React.createContext();\n// console.log(data)\n\nconst AppProvider = ({ children }) => {\n  const [highscore, setHighScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [cards, setCards] = useState({data})\n  const [ids, setIds] = useState([])\n\n\n  const cardClickHandler = (id) => {\n    console.log(id)\n    console.log(ids)\n    \n    if (ids.includes(id)) {\n      // setHighScore(0)\n      setCurrentScore(0)\n      setIds([])\n      \n    } else {\n      // setHighScore(highscore + 1);\n      setCurrentScore(currentScore + 1);\n      if (currentScore >= highscore) {\n        setHighScore(highscore + 1)\n      }\n      ids.push(id)\n    }\n\n \n\n    //  else {\n    //   const newArr = []\n    //   newArr.push(id)\n    //   setIds(newArr);\n    //   setHighScore(highscore + 1)\n    //   setCurrentScore(currentScore + 1)\n    //   // console.log(ids)\n    // }\n    // // setIds.push(id);\n    // // return ids;\n    // ids.push(id)\n    // return ids;\n  }\n\n  useEffect(() => {\n    shuffleOrder();\n  }, [currentScore])\n\n  const randomise = (a, b) => {\n    return Math.random() - 0.5;\n  }\n\n  const arrRandom = data\n\n  const shuffleOrder = () => {\n    data.sort(randomise)\n    console.log(arrRandom)\n    // setCards(arrRandom)\n  }\n\n  return (\n    <AppContext.Provider value={{ highscore, currentScore, cards, cardClickHandler }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContext, AppProvider };\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../context\";\n\nconst Header = () => {\n  const data = useContext(AppContext);\n  return (\n    <div className=\"header\">\n      <h1>Pokemon Memory Game</h1>\n      <h2>Click on the cards below to test your memory</h2>\n    \n      <div className=\"scoreDiv\">\n      <h4>Highscore {data.highscore}</h4>\n      <h4>Current Score {data.currentScore}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {useContext} from 'react';\nimport {AppContext} from '../context';\n\n\nconst Card = ({...item}) => {\n    const data = useContext(AppContext)\n\n    // console.log(item)\n    return (\n        <div className=\"singleCard\" key={item.id} onClick={() => data.cardClickHandler(item.id)}>\n            <h2>{item.name}</h2>\n\n            <img src={item.img} alt={item.name}/>\n\n            \n        </div>\n    );\n};\n\nexport default Card;","import React, {useContext} from 'react';\nimport Card from './Card';\nimport {AppContext} from '../context';\n\nconst Cardlist = () => {\n    const data = useContext(AppContext)\n    // console.log(data.cards.data)\n    return (\n        <div className=\"cardlistDiv\">\n            {data.cards.data.map((item) => {\n                // console.log('iteemmmmm')\n                // console.log(item)\n                return <Card key={item.id} {...item}/>\n            })}\n            \n        </div>\n    );\n};\n\nexport default Cardlist;","import React from 'react';\nimport Header from './components/Header';\nimport Cardlist from './components/Cardlist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Cardlist/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AppProvider} from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n/*\nStructure of app\ncontext: keep score, best score, provide memory cards info - name image etc,\nscore - use id to check which card we've clicked on, if not clicked add 1 to score, if clicked reset\neach time we click need to reshuffle the order of the cards, can create function for this in context\nreset on loss\n\nfunction randomize(a, b) {\n    return Math.random() - 0.5;\n}\n\nyourQuestionArray.sort(randomize);\n\n*/"],"sourceRoot":""}